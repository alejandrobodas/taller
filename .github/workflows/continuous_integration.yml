# Workflow for continuous integration tests
name: CI
on: [push, pull_request, workflow_dispatch]

jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [ifort, ifx, nvfortran]
        include:
        # Set flags for Intel Fortran Compiler Classic
        - compiler: ifort
          fcflags: -m64 -g -traceback -heap-arrays -assume realloc_lhs -extend-source 132 -check bounds,uninit,pointers,stack -stand f08
        # Set flags for Intel Fortran Compiler
        - compiler: ifx
          fcflags: -debug -traceback -O0 -heap-arrays -assume realloc_lhs -extend-source 132 -stand f08
        # Set flags for NVIDIA Fortran compiler
        - compiler: nvfortran
          fcflags: -Mallocatable=03 -Mstandard -Mbounds -Mchkptr -Kieee -Mchkstk
        # Set container images
        - compiler: ifort
          image: ghcr.io/earth-system-radiation/rte-rrtmgp-ci:oneapi
        - compiler: ifx
          image: ghcr.io/earth-system-radiation/rte-rrtmgp-ci:oneapi
        - compiler: nvfortran
          image: ghcr.io/earth-system-radiation/rte-rrtmgp-ci:nvhpc
    container:
      image: ${{ matrix.image }}
    env:
      F90: ${{ matrix.compiler }}
      FC:  ${{ matrix.compiler }}
      F90FLAGS:  ${{ matrix.fcflags }}
      # Make variables:
      NFHOME: /opt/netcdf-fortran
      ATOL: 0.0
      RTOL: 0.0
      KGO_VERSION: v002
    # Sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out repository under $GITHUB_WORKSPACE
    - uses: actions/checkout@v4
    ###############################################################################
    # Tests file download
    ###############################################################################
    # Retrieve and expand large data files
    - name: Retrieve data files
      run: |
        GDFILE='https://docs.google.com/uc?export=download&id=17eK4_DVEvFOE9Uf6siXJDpWZJKT1aqkU'
        OUTPATH=driver/data/cosp_input.um_global.nc.gz
        curl -sSfL -o $OUTPATH $GDFILE
        ls -lh driver/data
        gunzip ${OUTPATH}
    ###############################################################################
    # Tests compilers
    ###############################################################################
    - name: Basic test, UM global snapshot
      run: |
        ${F90} --version
